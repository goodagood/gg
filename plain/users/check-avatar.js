// Generated by CoffeeScript 1.8.0
(function() {
  var avatar, check_attr, check_flag_up, check_init_flag, check_new_user_obj, check_user_attr, del_flag, exit, p, show_flags;

  avatar = require('./avatar.js');

  p = console.log;

  exit = function() {
    return setTimeout(process.exit, 1000);
  };

  check_new_user_obj = function(username) {
    return avatar.make_user_obj(username, function(user) {
      console.log(user);
      if (!user) {
        return exit();
      }
      return user.get_attr(null, function(err, attrs) {
        console.log(err, attrs);
        return exit();
      });
    });
  };

  check_init_flag = function(username) {
    return avatar.make_user_obj(username, function(user) {
      return user.init_flag(function(what) {
        p('what', what);
        return exit();
      });
    });
  };

  check_user_attr = function(username) {
    return avatar.make_user_obj(username, function(user) {
      console.log(user);
      if (!user) {
        return exit();
      }
      return user.get_attr(null, function(err, attrs) {
        console.log(err, attrs);
        return exit();
      });
    });
  };

  check_attr = function(username) {
    return avatar.make_user_obj(username, function(user) {
      return user.pass_attr(function(err, what) {
        p('err, what: ', err, what);
        return exit();
      });
    });
  };

  check_flag_up = function(username, flag_name) {
    return avatar.make_user_obj(username, function(user) {
      return user.flag_up('test-flag', function(ok, flag_down) {
        p('flag supposed to be upped');
        user.show_flags(function() {});
        if (ok) {
          flag_down();
        }
        user.show_flags(function(err, info) {
          return p('it should donw');
        });
        return exit();
      });
    });
  };

  show_flags = function(username) {
    return avatar.make_user_obj(username, function(user) {
      return user.show_flags(function(err, results) {
        p(err, results);
        return exit();
      });
    });
  };

  del_flag = function(username, flag_name) {
    return avatar.make_user_obj(username, function(user) {
      return user.del_flag(flag_name, function(err, results) {
        p(err, results);
        user.show_flags((function() {}));
        return exit();
      });
    });
  };

  del_flag('abc', 'abc');

}).call(this);
