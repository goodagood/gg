// Generated by CoffeeScript 1.8.0

var Promise, assert, async, data, fm, folder_path, gg_folder_name, new_folder_name, p, path, stop, u, user_name;

assert = require("assert");
u = require("underscore");
async = require("async");
path = require("path");
Promise = require("bluebird");
data = require("./config.js");
fm = require("../aws/folder-v5.js");


folder_path = 'abc';
user_name = 'abc';
gg_folder_name = 'goodagood';
new_folder_name = 'test';


p = console.log;

stop = function(seconds) {
    var seconds = seconds || 1;
    var milli_sec = seconds * 1000;
    setTimeout(process.exit, milli_sec);
};


test_folder_v5e_1 = function(test){
    var Meta = {};
    fm.retrieve_promisified_folder(user_name).then(function(folder) {
        return folder;
    }).then(function(f) {
        Meta = f.get_meta();
        return Meta;
    }).then(function(m) {
        var ul = m.renders.ul;
        assert(u.isString(ul));
        test.done();
    });
};


test_folder_v5e_2 = function(test){
    var file_name;
    file_name = '.gg.members.json';
    fm.retrieve_promisified_folder(folder_path).then(function(folder) {
        folder.get_file_objs_by_name(file_name, function(e, objs) {
            //u.each(objs, function(o) {
            //    read_to_string();
            //});
            async.map(
                objs,
                function(o, callback) {
                    o.read_to_string(callback);
                },
                function(err, results){
                    test.done();
                }
            );
        });
    });
};


test_folder_v5e_3 = function(test){
    var dirname, file_path;
    file_path = "abc/goodagood";
    dirname = "abc";
    test.done();
};


module.exports = {
    setUp: function (callback) {
        this.foo = 'bar';
        callback();
    },
    tearDown: function (callback) {
        stop(); // stop in a second any way.
        callback();
    },

    test1: test_folder_v5e_1,
    test2: test_folder_v5e_2,
    test3: test_folder_v5e_3
};
